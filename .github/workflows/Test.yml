name: Test

on: 
  #repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@master
      
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt-get -y install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd fakeroot \
        cpio git python-docutils gettext automake autopoint texinfo build-essential help2man \
        pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget
        
    - name: Clone source code
      run: |
        git clone --depth=1 https://github.com/a0575/padavan.git /opt/rt-n56u
        cp -r trunk/. /opt/rt-n56u/trunk
        
    - name: Run shellcheck
      run: |
        cd /opt/rt-n56u/
        sh ./trunk/tools/shellcheck.sh
        
    - name: Prepare toolchain
      run: |    
        cd /opt/rt-n56u/toolchain-mipsel
        sh dl_toolchain.sh
        mkdir -p /opt/images/
    
    - name: Build Firmware
      env:
        TNAME: OYE-001
      run: |
        cd /opt/rt-n56u/trunk
        if [ ! -f configs/templates/$TNAME.config ] ; then
        echo "configs/templates/$TNAME.config not found "
        exit 1
        fi
        cp -f configs/templates/$TNAME.config .config
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=n/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y/g' .config
        sudo ./clear_tree
        sudo ./build_firmware_modify $TNAME 0
        sudo mv -f images/*.trx /opt/images/

    - name: Create archive
      if: ${{ github.event_name != 'release' && success() }}
      run: |
        cd /opt/rt-n56u
        GIT_VERSION=`git rev-parse --short=7 HEAD 2>/dev/null` && [ -n "$GIT_VERSION" ] && \
        image_name=images_${build_variant}_${GIT_VERSION} || image_name=images_${build_variant}
        cd /opt/images; md5sum *.trx |tee md5sum.txt; 7z a -mx=9 ${image_name}.7z ./*
        echo "image_name=${image_name}" >> $GITHUB_ENV
          
    - name: Generate release tag
      id: tag
      run: |
        echo "::set-output name=release_tag::Test-$(date +%Y-%m-%d)"
        touch release.txt
        echo "::set-output name=status::success"
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.workflow_token }} #提前配置好这里的环境变量
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: /opt/images/*.trx
