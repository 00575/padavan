name: Test

on: 
  #repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@master
      
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt-get -y install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd fakeroot \
        cpio git python-docutils gettext automake autopoint texinfo build-essential help2man \
        pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget
        
    - name: Clone source code
      run: |
        git clone --depth=1 https://github.com/a0575/padavan.git /opt/rt-n56u
        cp -r trunk/. /opt/rt-n56u/trunk
        
    - name: Run shellcheck
      run: |
        cd /opt/rt-n56u/
        sh ./trunk/tools/shellcheck.sh
        
    - name: Prepare toolchain
      run: |    
        cd /opt/rt-n56u/toolchain-mipsel
        sh dl_toolchain.sh
        mkdir -p /opt/images/
    
    - name: Build Firmware
      env:
        TNAME: OYE-001 #把"NEWIFI3"改成自己需要编译的设备
      run: |
        cd /opt/rt-n56u/trunk
        if [ ! -f configs/templates/$TNAME.config ] ; then
        echo "configs/templates/$TNAME.config not found "
        exit 1
        fi
 
        #####################################################################################
        #如果要修改默认IP：请把下面的 192.168.x.x 修改成你要设定的ip 然后删除前面的注释“#”
        #sed -i 's/192.168.123.1/192.168.x.x/g' user/shared/defaults.h
        #####################################################################################
        cp -f configs/templates/$TNAME.config .config
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=n/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y/g' .config
        #####################################################################################
        #因不同型号配置功能不一样，所以先把配置项删除，如果你自己要添加其他的，也要写上删除这一条，切记！！！
        #####################################################################################
        sed -i '/CONFIG_FIRMWARE_INCLUDE_MENTOHUST/d' .config #删除配置项MENTOHUST
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_SERVER/d' .config #删除配置项SOFTETHERVPN
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CLIENT/d' .config #删除配置项SOFTETHERVPN
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CMD/d' .config #删除配置项SOFTETHERVPN
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT/d' .config #删除配置项SCUTCLIENT
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS/d' .config #删除配置项SS plus+
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SSSERVER/d' .config #删除配置项SS server
        sed -i '/CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER/d' .config #删除配置项DNSFORWARDER
        sed -i '/CONFIG_FIRMWARE_INCLUDE_ADBYBY/d' .config #删除配置项adbyby plus+
        sed -i '/CONFIG_FIRMWARE_INCLUDE_FRPC/d' .config #删除配置项adbyby plus+
        sed -i '/CONFIG_FIRMWARE_INCLUDE_FRPS/d' .config #删除配置项adbyby plus+
        sed -i '/CONFIG_FIRMWARE_INCLUDE_TUNSAFE/d' .config #删除配置项adbyby plus+
        sed -i '/CONFIG_FIRMWARE_INCLUDE_ALIDDNS/d' .config #删除配置项阿里DDNS
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SMARTDNS/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SRELAY/d' .config
        ######################################################################
        #以下选项是定义你需要的功能（y=集成,n=忽略），重新写入到.config文件
        ######################################################################
        ##科学上网##
        echo "CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS=y" >> .config #科学上网插件，选择n后全部有关插件都不集成
        echo "CONFIG_FIRMWARE_INCLUDE_V2RAY=y" >> .config #集成v2ray执行文件，如果不集成，会从网上下载下来执行，不影响正常使用
        echo "CONFIG_FIRMWARE_INCLUDE_TROJAN=y" >> .config #集成trojan执行文件，如果不集成，会从网上下载下来执行，不影响正常使用
        echo "CONFIG_FIRMWARE_INCLUDE_KUMASOCKS=y" >> .config #socks5服务端
        ##科学上网##
        ##广告管理##
        echo "CONFIG_FIRMWARE_INCLUDE_ADBYBY=y" >> .config #adbyby plus+
        echo "CONFIG_FIRMWARE_INCLUDE_KOOLPROXY=y" >> .config #KP广告过滤
        ##广告管理##
        ##DNS服务##
        echo "CONFIG_FIRMWARE_INCLUDE_SMARTDNS=y" >> .config #smartdns
        echo "CONFIG_FIRMWARE_INCLUDE_ADGUARDHOME=y" >> .config #adg DNS去AD
        ##DNS服务##
        ##文件管理##
        echo "CONFIG_FIRMWARE_INCLUDE_CADDY=n" >> .config #在线文件管理服务
        echo "CONFIG_FIRMWARE_INCLUDE_CADDYBIN=n" >> .config #集成caddu执行文件，此文件有13M,请注意固件大小。如果不集成，会从网上下载下来执行，不影响正常使用
        ##文件管理##
        ##音乐解锁##
        echo "CONFIG_FIRMWARE_INCLUDE_WYY=y" >> .config #网易云解锁
        echo "CONFIG_FIRMWARE_INCLUDE_WYYBIN=y" >> .config #网易云解锁GO版本执行文件（2M多）注意固件超大小
        ##音乐解锁##
        ##内网穿透服务##
        echo "CONFIG_FIRMWARE_INCLUDE_ZEROTIER=y" >> .config #zerotier ~1.3M
        echo "CONFIG_FIRMWARE_INCLUDE_ALIDDNS=y" >> .config #aliddns
        ##内网穿透服务##
        ####################################################################################
        #自定义添加其它功能请参考源码configs/templates/目录下的config文件。按照上面的格式添加即可
        #格式如下：
        #sed -i '/自定义项/d' .config
        #echo "自定义项=y" >> .config
        #########################################################################################
        sed -i "s/^CONFIG_TOOLCHAIN_DIR=.*$/CONFIG_TOOLCHAIN_DIR=${CONFIG_TOOLCHAIN_DIR}/g" .config
        sudo ./clear_tree_simple
        sudo ./build_firmware_modify $TNAME 0
        sudo mv -f images/*.trx /opt/images
    
    - name: Create archive
      if: ${{ github.event_name != 'release' && success() }}
      run: |
        cd /opt/rt-n56u
        GIT_VERSION=`git rev-parse --short=7 HEAD 2>/dev/null` && [ -n "$GIT_VERSION" ] && \
        image_name=images_${build_variant}_${GIT_VERSION} || image_name=images_${build_variant}
        cd /opt/images; md5sum *.trx |tee md5sum.txt; 7z a -mx=9 ${image_name}.7z ./*
        echo "image_name=${image_name}" >> $GITHUB_ENV
          
    - name: Generate release tag
      id: tag
      run: |
        echo "::set-output name=release_tag::Test-$(date +%Y-%m-%d)"
        touch release.txt
        echo "::set-output name=status::success"
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.workflow_token }} #提前配置好这里的环境变量
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: /opt/images/*.trx
