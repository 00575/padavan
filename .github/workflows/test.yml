name: test

on: 
  repository_dispatch:
  workflow_dispatch:
  #schedule:
    #- cron: 0 23 * * 5

jobs:
  build:
    name: build
    runs-on: ubuntu-20.04
    if: ${{ !(github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) }}
    env:
      build_variant: ${{ matrix.build_variant }}
      targets: ${{ matrix.targets }}
      images_dir: /opt/images
    strategy:
      matrix:
        include:
          - build_variant: "A"
            targets: "PSG1208"
          - build_variant: "B"
            targets: "HC5861B"
          - build_variant: "C"
            targets: "K2P_nano-5.0"
          - build_variant: "D"
            targets: "XY-C1"

    steps:
      - name: Checkout
        uses: actions/checkout@master
      
      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get -y install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd fakeroot \
          cpio git python-docutils gettext automake autopoint texinfo build-essential help2man \
          pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget
        
      - name: Clone source code
        run: |
          git clone --depth=1 https://github.com/chongshengB/rt-n56u.git /opt/rt-n56u
          . $GITHUB_WORKSPACE/patches.sh
          cd /opt/rt-n56u
          sh ./trunk/tools/shellcheck.sh
        
      - name: Prepare toolchain
        run: |
          cd /opt/rt-n56u/toolchain-mipsel
          sh dl_toolchain.sh
          #mkdir -p /opt/images/
        
      - name: Start build
        run: |
          cd /opt/rt-n56u/trunk
          mkdir -p ${images_dir}
          for m in $targets; do fakeroot ./build_firmware_ci $m; \
          if [ $? = 0 ]; then cp -f images/*.trx ${images_dir}/$m.trx; else exit 1; fi; \
            ./clear_tree_simple >/dev/null 2>&1; done
            
      - name: Create archive
        if: ${{ github.event_name != 'release' && success() }}
        run: |
          cd
          mkdir -p ./opt/images
          
          cd /opt/rt-n56u
          ls -lh ${images_dir}
          GIT_VERSION=`git rev-parse --short=7 HEAD 2>/dev/null` && [ -n "$GIT_VERSION" ] && \
          image_name=images_${build_variant}_${GIT_VERSION} || image_name=images_${build_variant}
          cd ${images_dir}; md5sum *.trx |tee md5sum.txt; 7z a -mx=9 ${image_name}.7z ./*
          echo "image_name=${image_name}" >> $GITHUB_ENV
          echo "strDate=$(TZ=UTC-8 date +%Y-%m-%d)" >> $GITHUB_ENV
          
          cd ..
          mv images/*.trx /opt/images
          
      - name: Upload images to Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: ${{ env.image_name }}
          path: ${{ env.images_dir }}/*.7z
          
      - name: Upload release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.workflow_token }}
          file: /opt/images/*.trx
          tag: ${{env.strDate}}
          file_glob: true
          overwrite: true
          release_name: padavan-${{env.strDate}}-自动发布
